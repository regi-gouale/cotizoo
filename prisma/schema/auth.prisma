model User {
  id               String           @id
  name             String
  email            String
  emailVerified    Boolean
  image            String?
  role             UserRole         @default(USER)
  status           UserStatus       @default(ACTIVE)
  createdAt        DateTime
  updatedAt        DateTime
  stripeCustomerId String? // Identifiant du client Stripe
  sessions         Session[]
  accounts         Account[]
  tontines         UserTontine[]
  transactions     Transaction[]
  historyLogs      TontineHistory[]
  tickets          Ticket[] // Relation avec les tickets
  contactMessages  ContactMessage[] // Relation avec les messages de contact
  comments         Comment[] // Relation avec les commentaires
  invitationsSent  Invitation[]     @relation("invitationCreator")

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
